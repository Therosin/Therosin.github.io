---
import Page from "../../../layouts/Page.astro";
import FormattedDate from "../../../components/FormattedDate.astro";
import BlogPostCard from "../../../components/BlogPostCard.vue";
import For from "../../../components/For.astro";
import { CollectionEntry, getCollection } from "astro:content";

export async function getStaticPaths() {
	const posts = await getCollection('blog');	
	// create a new array of all possible tags removing duplicates
	const tags = [...new Set(posts.map((post) => post.data.tags).flat())];
	return tags.map((tag) => ({
		params: { tag },
		props: { tag },
	}));
}

const { tag } = Astro.props;

const posts = (await getCollection("blog"))
	.filter((post) => post.data.isDraft === false)
	.sort((a, b) => {
		const aData = a.data;
		const bData = b.data;
		const aDate = (aData.updatedDate || aData.pubDate).valueOf();
		const bDate = (bData.updatedDate || bData.pubDate).valueOf();
		return bDate - aDate;
	});

type Post = CollectionEntry<"blog">;
---

<Page>
	<div class="blog-list-header">
		<div class="blog-list-header-content">
			<h3>Posts:</h3>
		</div>
		<div class="blog-list-header-filtered">
			<p>Viewing articles tagged with: <span class="tag-filter">{tag}</span></p>
		</div>
	</div>
	<section>
		<For each={posts}>
			{
				(post: Post) => {
					if (!post.data.tags.includes(tag)) return;

					return (
						<BlogPostCard url={`/blog/post/${post.slug}/`} tags={post.data.tags} >
							<h2 slot="post-title">{post.data.title}</h2>
							<p slot="post-date">
								<FormattedDate date={post.data.pubDate} />
							</p>
							<p slot="post-description">{post.data.description}</p>
							<img
								slot="post-image"
								src={post.data.heroImage}
								class="card-thumbnail"
							/>
						</BlogPostCard>
					)
				}
			}
		</For>
	</section>
</Page>


<style lang="scss" scoped>
	.blog-list-header {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		padding: 1rem 0;
		border-bottom: 1px solid var(--primary-color);
	}
	.blog-list-header-content {
		display: flex;
		max-width: 60%;
		flex-direction: column;
		justify-content: center;
	}
	.blog-list-header-filtered {
		display: flex;
		max-width: 40%;
		flex-direction: column;
		justify-content: center;
	}
	.tag-filter {
		color: var(--color-primary);
	}
	
</style>
